# NOCTIS Pro - Internet-Accessible Production Environment
# Configuration for internet access with DICOM machines

# =============================================================================
# BASIC CONFIGURATION
# =============================================================================

# Django Settings
DEBUG=False
SECRET_KEY=CHANGE-THIS-TO-A-STRONG-SECRET-KEY-FOR-PRODUCTION
DJANGO_SETTINGS_MODULE=noctis_pro.settings.production

# Server Configuration
DOMAIN_NAME=your-domain.com
SERVER_IP=your.server.ip.address
ALLOWED_HOSTS=your-domain.com,www.your-domain.com,dicom.your-domain.com,your.server.ip.address

# =============================================================================
# INTERNET DICOM CONFIGURATION
# =============================================================================

# DICOM Internet Access
DICOM_EXTERNAL_ACCESS=True
DICOM_PORT=11112
DICOM_AET=NOCTIS_SCP
DICOM_BIND=0.0.0.0

# DICOM Security Settings
DICOM_MAX_ASSOCIATIONS=10
DICOM_TIMEOUT=30
DICOM_LOG_LEVEL=INFO
FACILITY_AE_VALIDATION=True

# Rate Limiting for DICOM
DICOM_RATE_LIMIT_WINDOW=300
DICOM_MAX_CONNECTIONS_PER_WINDOW=10
DICOM_BLOCK_DURATION=3600

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database (Production)
POSTGRES_DB=noctis_pro
POSTGRES_USER=noctis_user
POSTGRES_PASSWORD=CHANGE-THIS-TO-A-STRONG-DATABASE-PASSWORD
POSTGRES_HOST=db
POSTGRES_PORT=5432

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis for caching and Celery
REDIS_URL=redis://redis:6379/0
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# =============================================================================
# SSL/TLS CONFIGURATION
# =============================================================================

# SSL Settings
SECURE_SSL_REDIRECT=True
SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True
USE_TLS=True

# Let's Encrypt Settings
LETSENCRYPT_EMAIL=your-email@example.com
CERTBOT_DOMAINS=your-domain.com,www.your-domain.com,dicom.your-domain.com

# =============================================================================
# SECURITY CONFIGURATION FOR INTERNET ACCESS
# =============================================================================

# Enhanced security for internet exposure
SECURE_HSTS_SECONDS=31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS=True
SECURE_HSTS_PRELOAD=True
SECURE_CONTENT_TYPE_NOSNIFF=True
SECURE_BROWSER_XSS_FILTER=True
X_FRAME_OPTIONS=DENY

# CORS Settings (Restrictive for production)
CORS_ALLOW_ALL_ORIGINS=False
CORS_ALLOWED_ORIGINS=https://your-domain.com,https://www.your-domain.com,https://dicom.your-domain.com
CORS_ALLOW_CREDENTIALS=True

# CSRF Settings
CSRF_TRUSTED_ORIGINS=https://your-domain.com,https://www.your-domain.com,https://dicom.your-domain.com

# Session Security
SESSION_COOKIE_AGE=3600
SESSION_EXPIRE_AT_BROWSER_CLOSE=True
SESSION_COOKIE_HTTPONLY=True
SESSION_COOKIE_SAMESITE=Strict

# =============================================================================
# FACILITY MANAGEMENT
# =============================================================================

# Facility AE Title Settings
AUTO_GENERATE_AE_TITLES=True
AE_TITLE_MAX_LENGTH=16
AE_TITLE_VALIDATION=True

# Facility User Creation
AUTO_CREATE_FACILITY_USERS=True
FACILITY_USER_PASSWORD_LENGTH=12

# =============================================================================
# DICOM MACHINE CONFIGURATION GUIDE
# =============================================================================

# DICOM Machine Setup Instructions:
# 
# 1. Create facility in admin panel: https://your-domain.com/admin/
# 2. Note the generated AE Title for the facility
# 3. Configure your DICOM machine with:
#    - Called AE Title: NOCTIS_SCP
#    - Calling AE Title: [Your facility's AE Title from step 2]
#    - Host: your-domain.com
#    - Port: 11112
#    - Timeout: 30 seconds
#
# Example facility AE titles:
# - "City Hospital" → "CITY_HOSPITAL"
# - "Regional Medical Center" → "REGIONAL_MED"
# - "Diagnostic Imaging LLC" → "DIAGNOSTIC_IMG"

# =============================================================================
# FIREWALL CONFIGURATION
# =============================================================================

# Required firewall rules for internet access:
# sudo ufw allow 22/tcp      # SSH
# sudo ufw allow 80/tcp      # HTTP (redirects to HTTPS)
# sudo ufw allow 443/tcp     # HTTPS
# sudo ufw allow 11112/tcp   # DICOM - INTERNET ACCESSIBLE

# Optional: Restrict DICOM access to specific IPs
# DICOM_ALLOWED_IPS=192.168.1.0/24,10.0.0.0/8,172.16.0.0/12

# =============================================================================
# MONITORING AND ALERTING
# =============================================================================

# Enable monitoring for internet access
ENABLE_MONITORING=True
ENABLE_SECURITY_MONITORING=True

# Notification settings for security events
SECURITY_NOTIFICATION_EMAIL=security@your-domain.com
DICOM_SECURITY_ALERTS=True

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================

# Enhanced backup for internet-accessible system
BACKUP_ENABLED=True
BACKUP_RETENTION_DAYS=90
BACKUP_SCHEDULE=0 2 * * *
BACKUP_NOTIFICATION_EMAIL=admin@your-domain.com

# Remote backup (recommended for internet systems)
BACKUP_S3_BUCKET=your-noctis-backups
BACKUP_S3_REGION=us-east-1
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key

# =============================================================================
# PERFORMANCE SETTINGS FOR INTERNET ACCESS
# =============================================================================

# Nginx settings
NGINX_WORKER_PROCESSES=auto
NGINX_WORKER_CONNECTIONS=1024
NGINX_CLIENT_MAX_BODY_SIZE=100M
NGINX_RATE_LIMIT=60r/m

# Application settings
WEB_WORKERS=4
WEB_WORKER_CONNECTIONS=1000
WEB_TIMEOUT=60

# Database connection pool
DB_CONN_MAX_AGE=600
DB_CONN_POOL_SIZE=20

# =============================================================================
# FACILITY DICOM SETUP EXAMPLES
# =============================================================================

# Example 1: City Hospital
# Facility Name: "City Hospital"
# Generated AE Title: "CITY_HOSPITAL"
# DICOM Machine Config:
#   Called AE: NOCTIS_SCP
#   Calling AE: CITY_HOSPITAL
#   Host: your-domain.com
#   Port: 11112

# Example 2: Regional Medical Center
# Facility Name: "Regional Medical Center"
# Generated AE Title: "REGIONAL_MED"
# DICOM Machine Config:
#   Called AE: NOCTIS_SCP
#   Calling AE: REGIONAL_MED
#   Host: your-domain.com
#   Port: 11112

# =============================================================================
# SECURITY NOTES FOR INTERNET ACCESS
# =============================================================================

# CRITICAL SECURITY REQUIREMENTS:
# 1. Change ALL default passwords and secrets
# 2. Configure strong SSL certificates (Let's Encrypt recommended)
# 3. Set up proper firewall rules (UFW or iptables)
# 4. Enable fail2ban for intrusion prevention
# 5. Configure automated security updates
# 6. Set up monitoring and alerting
# 7. Regularly review DICOM connection logs
# 8. Implement IP whitelisting if possible
# 9. Use strong facility AE titles
# 10. Monitor for unauthorized access attempts

# =============================================================================
# DICOM MACHINE CONFIGURATION STEPS
# =============================================================================

# For DICOM machine administrators:
# 
# 1. Access NOCTIS Pro admin panel: https://your-domain.com/admin/
# 2. Create your facility:
#    - Fill in facility details
#    - Note the auto-generated AE Title
#    - Optionally create facility user account
# 
# 3. Configure your DICOM machine:
#    - Called AE Title: NOCTIS_SCP
#    - Calling AE Title: [Your facility's AE Title]
#    - Hostname: your-domain.com
#    - Port: 11112
#    - Protocol: DICOM TCP/IP
#    - Timeout: 30 seconds
# 
# 4. Test connection:
#    - Send a C-ECHO (ping) first
#    - Then try sending a test image
#    - Check logs in admin panel for success
# 
# 5. Verify image routing:
#    - Images should appear in your facility's worklist
#    - Check that images are properly attributed to your facility
#    - Verify patient data is correctly parsed

# =============================================================================
# TROUBLESHOOTING INTERNET DICOM ACCESS
# =============================================================================

# Common issues and solutions:
# 
# 1. Connection refused:
#    - Check firewall rules: sudo ufw status
#    - Verify DICOM service is running: docker compose ps
#    - Check port accessibility: telnet your-domain.com 11112
# 
# 2. Unknown AE Title:
#    - Verify facility is created and active
#    - Check AE title matches exactly (case-insensitive)
#    - Review DICOM machine configuration
# 
# 3. Images not appearing:
#    - Check DICOM receiver logs: docker compose logs dicom_receiver
#    - Verify facility association in database
#    - Check file permissions in media directory
# 
# 4. Security blocks:
#    - Review security logs: /opt/noctis/logs/dicom_security.log
#    - Check for IP blocks: docker compose logs fail2ban
#    - Verify rate limiting settings

# =============================================================================
# DEPLOYMENT COMMANDS FOR INTERNET ACCESS
# =============================================================================

# Deploy with internet access:
# docker compose -f docker-compose.internet.yml up -d

# Enable security monitoring:
# docker compose -f docker-compose.internet.yml --profile security up -d

# Monitor DICOM connections:
# docker compose -f docker-compose.internet.yml --profile monitoring up -d

# View DICOM security logs:
# tail -f /opt/noctis/logs/dicom_security.log

# Test DICOM connectivity:
# docker compose exec dicom_receiver python manage.py test_dicom_connectivity