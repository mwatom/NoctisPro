# NOCTIS Pro - Desktop Development Environment
# Copy this file to .env and customize the values

# =============================================================================
# BASIC CONFIGURATION
# =============================================================================

# Django Settings
DEBUG=True
SECRET_KEY=iKbgLcvssZsuMDVZ97N93jBaVd75nXZM7PVugJ6jGDM=
DJANGO_SETTINGS_MODULE=noctis_pro.settings

# Application URLs
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,*.local

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database
POSTGRES_DB=noctis_pro
POSTGRES_USER=noctis_user
POSTGRES_PASSWORD=noctis_dev_password
POSTGRES_HOST=db
POSTGRES_PORT=5432

# Database URL (alternative format)
DATABASE_URL=postgresql://noctis_user:noctis_dev_password@db:5432/noctis_pro

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis for caching and Celery
REDIS_URL=redis://redis:6379/0
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# =============================================================================
# FILE STORAGE
# =============================================================================

# Media and Static Files
MEDIA_ROOT=/app/media
STATIC_ROOT=/app/staticfiles
MEDIA_URL=/media/
STATIC_URL=/static/

# =============================================================================
# DICOM CONFIGURATION
# =============================================================================

# DICOM Receiver Settings
DICOM_PORT=11112
DICOM_AET=NOCTIS_SCP
DICOM_BIND=0.0.0.0
DICOM_STORAGE_PATH=/app/dicom_storage

# =============================================================================
# EMAIL CONFIGURATION (Development)
# =============================================================================

# Email Backend (Console for development)
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
EMAIL_HOST=localhost
EMAIL_PORT=587
EMAIL_USE_TLS=False
EMAIL_HOST_USER=
EMAIL_HOST_PASSWORD=

# =============================================================================
# LOGGING
# =============================================================================

# Log Level
LOG_LEVEL=DEBUG

# =============================================================================
# SECURITY SETTINGS (Development - Relaxed)
# =============================================================================

# CORS Settings (Allow all for development)
CORS_ALLOW_ALL_ORIGINS=True
CORS_ALLOW_CREDENTIALS=True

# CSRF Settings
CSRF_TRUSTED_ORIGINS=http://localhost:8000,http://127.0.0.1:8000

# Session Security (Relaxed for development)
SESSION_COOKIE_SECURE=False
CSRF_COOKIE_SECURE=False
SECURE_SSL_REDIRECT=False

# =============================================================================
# DEVELOPMENT TOOLS
# =============================================================================

# Enable development tools (set to true to start adminer and redis-commander)
ENABLE_DEV_TOOLS=false

# =============================================================================
# OPTIONAL: AI/ML SETTINGS
# =============================================================================

# AI Model Settings (if using AI features)
# AI_MODEL_PATH=/app/models
# AI_ENABLE_GPU=False

# =============================================================================
# BACKUP SETTINGS
# =============================================================================

# Backup Directory
BACKUP_DIR=/app/backups
BACKUP_RETENTION_DAYS=30

# =============================================================================
# MONITORING (Optional for development)
# =============================================================================

# Health Check URL
HEALTH_CHECK_URL=http://localhost:8000/health/

# =============================================================================
# NOTES FOR DEVELOPMENT
# =============================================================================

# 1. This configuration is optimized for development on Ubuntu Desktop
# 2. All services are accessible from the host system for debugging
# 3. Debug mode is enabled with detailed error messages
# 4. CORS is permissive for frontend development
# 5. Database and Redis are exposed on standard ports
# 6. File storage uses local bind mounts for persistence
# 7. SSL/TLS is disabled for local development

# =============================================================================
# QUICK START COMMANDS
# =============================================================================

# Start development environment:
# docker compose -f docker-compose.desktop.yml up -d

# Start with development tools (adminer, redis-commander):
# ENABLE_DEV_TOOLS=true docker compose -f docker-compose.desktop.yml --profile tools up -d

# View logs:
# docker compose -f docker-compose.desktop.yml logs -f

# Stop environment:
# docker compose -f docker-compose.desktop.yml down