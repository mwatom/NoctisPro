# Generated by Django 5.2.5 on 2025-08-30 08:16

from django.db import migrations, models
import django.db.models.deletion
import django.core.validators
import uuid


def populate_measurement_relations(apps, schema_editor):
    """Populate series and study fields for existing Measurement records"""
    Measurement = apps.get_model('dicom_viewer', 'Measurement')
    
    # Update all existing measurements to have series and study fields from their image
    for measurement in Measurement.objects.all():
        if measurement.image:
            if not measurement.series_id and measurement.image.series:
                measurement.series = measurement.image.series
            if not measurement.study_id and measurement.image.series and measurement.image.series.study:
                measurement.study = measurement.image.series.study
            measurement.save(update_fields=['series', 'study'])


def reverse_populate_measurement_relations(apps, schema_editor):
    """Reverse operation - no action needed"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('dicom_viewer', '0011_fix_reconstructionjob_study_field'),
    ]

    operations = [
        # Populate existing measurement relations
        migrations.RunPython(
            populate_measurement_relations,
            reverse_populate_measurement_relations,
        ),
        
        # Make series field non-nullable
        migrations.AlterField(
            model_name='measurement',
            name='series',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='worklist.series', db_index=True),
        ),
        
        # Make study field non-nullable  
        migrations.AlterField(
            model_name='measurement',
            name='study',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='worklist.study', db_index=True),
        ),
    ]
