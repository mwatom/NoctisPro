# Generated by Django 5.2.5 on 2025-08-29 17:52

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dicom_viewer', '0004_add_annotation_fields'),
        ('worklist', '0003_alter_study_accession_number'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DicomImageCache',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('window_width', models.FloatField()),
                ('window_level', models.FloatField()),
                ('inverted', models.BooleanField(default=False)),
                ('enhancement', models.CharField(default='none', max_length=20)),
                ('cache_key', models.CharField(db_index=True, max_length=255, unique=True)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.BigIntegerField()),
                ('format', models.CharField(default='JPEG', max_length=10)),
                ('quality', models.PositiveIntegerField(default=85)),
                ('access_count', models.PositiveIntegerField(default=0)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-last_accessed'],
            },
        ),
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_layout', models.CharField(choices=[('1x1', 'Single Image'), ('1x2', '1 x 2 Grid'), ('2x1', '2 x 1 Grid'), ('2x2', '2 x 2 Grid'), ('2x3', '2 x 3 Grid'), ('3x3', '3 x 3 Grid'), ('mpr', 'MPR (3-plane)'), ('custom', 'Custom Layout')], default='1x1', max_length=20)),
                ('auto_window_level', models.BooleanField(default=True)),
                ('invert_grayscale', models.BooleanField(default=False)),
                ('smooth_zoom', models.BooleanField(default=True)),
                ('left_mouse_action', models.CharField(choices=[('window_level', 'Window/Level'), ('zoom', 'Zoom'), ('pan', 'Pan'), ('measurement', 'Measurement')], default='window_level', max_length=20)),
                ('middle_mouse_action', models.CharField(choices=[('window_level', 'Window/Level'), ('zoom', 'Zoom'), ('pan', 'Pan'), ('measurement', 'Measurement')], default='pan', max_length=20)),
                ('right_mouse_action', models.CharField(choices=[('window_level', 'Window/Level'), ('zoom', 'Zoom'), ('pan', 'Pan'), ('measurement', 'Measurement')], default='zoom', max_length=20)),
                ('measurement_units', models.CharField(default='mm', max_length=10)),
                ('show_measurement_labels', models.BooleanField(default=True)),
                ('measurement_precision', models.PositiveIntegerField(default=2, validators=[django.core.validators.MaxValueValidator(6)])),
                ('enable_gpu_acceleration', models.BooleanField(default=True)),
                ('max_texture_size', models.PositiveIntegerField(default=4096)),
                ('preload_adjacent_images', models.BooleanField(default=True)),
                ('cache_size_mb', models.PositiveIntegerField(default=512)),
                ('toolbar_position', models.CharField(choices=[('top', 'Top'), ('bottom', 'Bottom'), ('left', 'Left'), ('right', 'Right')], default='top', max_length=10)),
                ('show_rulers', models.BooleanField(default=False)),
                ('show_orientation_marker', models.BooleanField(default=True)),
                ('dark_theme', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ViewerPerformanceMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('operation_type', models.CharField(choices=[('image_load', 'Image Load'), ('windowing', 'Window/Level Change'), ('measurement', 'Measurement Creation'), ('annotation', 'Annotation Creation'), ('reconstruction', '3D Reconstruction'), ('series_load', 'Series Load'), ('study_load', 'Study Load'), ('export', 'Image Export'), ('print', 'Image Print')], db_index=True, max_length=20)),
                ('operation_details', models.JSONField(default=dict)),
                ('duration_ms', models.PositiveIntegerField(help_text='Operation duration in milliseconds')),
                ('memory_usage_mb', models.FloatField(blank=True, null=True)),
                ('network_bytes', models.BigIntegerField(blank=True, null=True)),
                ('cache_hit', models.BooleanField(default=False)),
                ('study_id', models.PositiveIntegerField(blank=True, null=True)),
                ('series_id', models.PositiveIntegerField(blank=True, null=True)),
                ('image_id', models.PositiveIntegerField(blank=True, null=True)),
                ('browser_info', models.JSONField(default=dict)),
                ('screen_resolution', models.CharField(blank=True, max_length=20)),
                ('connection_speed', models.CharField(blank=True, max_length=20)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AlterModelOptions(
            name='annotation',
            options={'ordering': ['layer', '-created_at']},
        ),
        migrations.AlterModelOptions(
            name='measurement',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='reconstructionjob',
            options={'ordering': ['-created_at']},
        ),
        migrations.AddField(
            model_name='measurement',
            name='accuracy',
            field=models.FloatField(blank=True, help_text='Measurement accuracy/confidence', null=True),
        ),
        migrations.AddField(
            model_name='measurement',
            name='is_validated',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='measurement',
            name='pixel_spacing',
            field=models.JSONField(default=list, help_text='Pixel spacing at time of measurement'),
        ),
        migrations.AddField(
            model_name='measurement',
            name='previous_version',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dicom_viewer.measurement'),
        ),
        migrations.AddField(
            model_name='measurement',
            name='series',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='worklist.series'),
        ),
        migrations.AddField(
            model_name='measurement',
            name='slice_thickness',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='measurement',
            name='study',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='worklist.study'),
        ),
        migrations.AddField(
            model_name='measurement',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='measurement',
            name='validated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_measurements', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='measurement',
            name='version',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name='measurement',
            name='window_level',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='measurement',
            name='window_width',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reconstructionjob',
            name='actual_duration',
            field=models.DurationField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reconstructionjob',
            name='cpu_time',
            field=models.DurationField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reconstructionjob',
            name='error_code',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='reconstructionjob',
            name='estimated_duration',
            field=models.DurationField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reconstructionjob',
            name='max_retries',
            field=models.PositiveIntegerField(default=3),
        ),
        migrations.AddField(
            model_name='reconstructionjob',
            name='memory_usage',
            field=models.BigIntegerField(blank=True, help_text='Peak memory usage in bytes', null=True),
        ),
        migrations.AddField(
            model_name='reconstructionjob',
            name='priority',
            field=models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10),
        ),
        migrations.AddField(
            model_name='reconstructionjob',
            name='processing_node',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='reconstructionjob',
            name='progress',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='reconstructionjob',
            name='result_metadata',
            field=models.JSONField(default=dict),
        ),
        migrations.AddField(
            model_name='reconstructionjob',
            name='result_size',
            field=models.BigIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reconstructionjob',
            name='retry_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='reconstructionjob',
            name='started_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reconstructionjob',
            name='study',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='worklist.study'),
        ),
        migrations.AddField(
            model_name='reconstructionjob',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='reconstructionjob',
            name='worker_id',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='viewersession',
            name='access_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='viewersession',
            name='last_accessed',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='viewersession',
            name='layout_config',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='viewersession',
            name='measurement_tools',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='viewersession',
            name='session_duration',
            field=models.DurationField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='viewersession',
            name='viewport_settings',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='viewersession',
            name='window_level_presets',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AlterField(
            model_name='annotation',
            name='id',
            field=models.BigAutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='annotation',
            name='layer',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='annotation',
            name='previous_version',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dicom_viewer.annotation'),
        ),
        migrations.AlterField(
            model_name='measurement',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='measurement',
            name='measurement_type',
            field=models.CharField(choices=[('length', 'Length'), ('area', 'Area'), ('angle', 'Angle'), ('cobb_angle', 'Cobb Angle'), ('volume', 'Volume'), ('density', 'Density (HU)'), ('distance_3d', '3D Distance'), ('ellipse', 'Ellipse'), ('rectangle', 'Rectangle'), ('circle', 'Circle'), ('polyline', 'Polyline'), ('spline', 'Spline Curve')], db_index=True, max_length=20),
        ),
        migrations.AlterField(
            model_name='measurement',
            name='points',
            field=models.JSONField(default=list),
        ),
        migrations.AlterField(
            model_name='measurement',
            name='unit',
            field=models.CharField(choices=[('mm', 'Millimeters'), ('cm', 'Centimeters'), ('px', 'Pixels'), ('mm2', 'Square Millimeters'), ('cm2', 'Square Centimeters'), ('mm3', 'Cubic Millimeters'), ('cm3', 'Cubic Centimeters'), ('deg', 'Degrees'), ('rad', 'Radians'), ('hu', 'Hounsfield Units')], default='mm', max_length=16),
        ),
        migrations.AlterField(
            model_name='measurement',
            name='value',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='reconstructionjob',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='reconstructionjob',
            name='job_type',
            field=models.CharField(choices=[('mpr', 'Multiplanar Reconstruction'), ('mip', 'Maximum Intensity Projection'), ('minip', 'Minimum Intensity Projection'), ('bone_3d', 'Bone 3D Reconstruction'), ('mri_3d', 'MRI 3D Reconstruction'), ('vr', 'Volume Rendering'), ('curved_mpr', 'Curved MPR'), ('thick_slab', 'Thick Slab'), ('vessel_analysis', 'Vessel Analysis'), ('perfusion', 'Perfusion Analysis')], db_index=True, max_length=20),
        ),
        migrations.AlterField(
            model_name='reconstructionjob',
            name='parameters',
            field=models.JSONField(default=dict),
        ),
        migrations.AlterField(
            model_name='reconstructionjob',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('queued', 'Queued'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('paused', 'Paused')], db_index=True, default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='viewersession',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='viewersession',
            name='session_data',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AlterUniqueTogether(
            name='viewersession',
            unique_together={('user', 'study')},
        ),
        migrations.AddIndex(
            model_name='annotation',
            index=models.Index(fields=['user', 'study'], name='dicom_viewe_user_id_943519_idx'),
        ),
        migrations.AddIndex(
            model_name='annotation',
            index=models.Index(fields=['image', '-created_at'], name='dicom_viewe_image_i_eb3c97_idx'),
        ),
        migrations.AddIndex(
            model_name='annotation',
            index=models.Index(fields=['study', 'annotation_type'], name='dicom_viewe_study_i_ef5762_idx'),
        ),
        migrations.AddIndex(
            model_name='annotation',
            index=models.Index(fields=['-created_at'], name='dicom_viewe_created_2d6c06_idx'),
        ),
        migrations.AddIndex(
            model_name='measurement',
            index=models.Index(fields=['user', 'study'], name='dicom_viewe_user_id_ad78ba_idx'),
        ),
        migrations.AddIndex(
            model_name='measurement',
            index=models.Index(fields=['study', 'measurement_type'], name='dicom_viewe_study_i_855c8f_idx'),
        ),
        migrations.AddIndex(
            model_name='measurement',
            index=models.Index(fields=['image', '-created_at'], name='dicom_viewe_image_i_fa26cb_idx'),
        ),
        migrations.AddIndex(
            model_name='measurement',
            index=models.Index(fields=['-created_at'], name='dicom_viewe_created_27bcd6_idx'),
        ),
        migrations.AddIndex(
            model_name='reconstructionjob',
            index=models.Index(fields=['user', 'status'], name='dicom_viewe_user_id_ec842f_idx'),
        ),
        migrations.AddIndex(
            model_name='reconstructionjob',
            index=models.Index(fields=['series', 'job_type'], name='dicom_viewe_series__016746_idx'),
        ),
        migrations.AddIndex(
            model_name='reconstructionjob',
            index=models.Index(fields=['status', 'priority', '-created_at'], name='dicom_viewe_status_db564f_idx'),
        ),
        migrations.AddIndex(
            model_name='reconstructionjob',
            index=models.Index(fields=['-created_at'], name='dicom_viewe_created_c692c5_idx'),
        ),
        migrations.AddIndex(
            model_name='viewersession',
            index=models.Index(fields=['user', 'study'], name='dicom_viewe_user_id_0494b2_idx'),
        ),
        migrations.AddIndex(
            model_name='viewersession',
            index=models.Index(fields=['user', '-last_accessed'], name='dicom_viewe_user_id_87801b_idx'),
        ),
        migrations.AddIndex(
            model_name='viewersession',
            index=models.Index(fields=['-updated_at'], name='dicom_viewe_updated_8b3a43_idx'),
        ),
        migrations.AddField(
            model_name='dicomimagecache',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='worklist.dicomimage'),
        ),
        migrations.AddField(
            model_name='userpreferences',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='viewer_preferences', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='viewerperformancemetrics',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dicom_viewer.viewersession'),
        ),
        migrations.AddField(
            model_name='viewerperformancemetrics',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='dicomimagecache',
            index=models.Index(fields=['image', 'window_width', 'window_level'], name='dicom_viewe_image_i_320f41_idx'),
        ),
        migrations.AddIndex(
            model_name='dicomimagecache',
            index=models.Index(fields=['-last_accessed'], name='dicom_viewe_last_ac_a5da5b_idx'),
        ),
        migrations.AddIndex(
            model_name='dicomimagecache',
            index=models.Index(fields=['cache_key'], name='dicom_viewe_cache_k_d14222_idx'),
        ),
        migrations.AddIndex(
            model_name='viewerperformancemetrics',
            index=models.Index(fields=['user', 'operation_type', '-timestamp'], name='dicom_viewe_user_id_236baf_idx'),
        ),
        migrations.AddIndex(
            model_name='viewerperformancemetrics',
            index=models.Index(fields=['operation_type', '-timestamp'], name='dicom_viewe_operati_db95ff_idx'),
        ),
        migrations.AddIndex(
            model_name='viewerperformancemetrics',
            index=models.Index(fields=['-timestamp'], name='dicom_viewe_timesta_ed4f9f_idx'),
        ),
        migrations.AddIndex(
            model_name='viewerperformancemetrics',
            index=models.Index(fields=['success', 'operation_type'], name='dicom_viewe_success_e9c537_idx'),
        ),
    ]
