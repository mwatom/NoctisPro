# NOCTIS Pro - Ubuntu Server Production Environment
# Copy this file to .env and customize the values for your server

# =============================================================================
# BASIC CONFIGURATION
# =============================================================================

# Django Settings
DEBUG=False
SECRET_KEY=CHANGE-THIS-TO-A-STRONG-SECRET-KEY-FOR-PRODUCTION
DJANGO_SETTINGS_MODULE=noctis_pro.settings.production

# Server Domain/IP Configuration
DOMAIN_NAME=your-domain.com
SERVER_IP=your.server.ip.address
ALLOWED_HOSTS=your-domain.com,www.your-domain.com,your.server.ip.address

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database (Production)
POSTGRES_DB=noctis_pro
POSTGRES_USER=noctis_user
POSTGRES_PASSWORD=CHANGE-THIS-TO-A-STRONG-DATABASE-PASSWORD
POSTGRES_HOST=db
POSTGRES_PORT=5432

# Database URL
DATABASE_URL=postgresql://noctis_user:STRONG-PASSWORD@db:5432/noctis_pro

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis for caching and Celery (Production)
REDIS_URL=redis://redis:6379/0
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# =============================================================================
# SSL/TLS CONFIGURATION
# =============================================================================

# SSL Settings
SECURE_SSL_REDIRECT=True
SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True
USE_TLS=True

# Let's Encrypt Settings
LETSENCRYPT_EMAIL=your-email@example.com
CERTBOT_DOMAINS=your-domain.com,www.your-domain.com

# =============================================================================
# NGINX CONFIGURATION
# =============================================================================

# Nginx Settings
NGINX_WORKER_PROCESSES=auto
NGINX_WORKER_CONNECTIONS=1024
NGINX_CLIENT_MAX_BODY_SIZE=100M

# =============================================================================
# FILE STORAGE
# =============================================================================

# Production File Paths (using bind mounts to host system)
MEDIA_ROOT=/opt/noctis/media
STATIC_ROOT=/opt/noctis/staticfiles
BACKUP_ROOT=/opt/noctis/backups
DICOM_STORAGE_ROOT=/opt/noctis/dicom_storage

# URLs
MEDIA_URL=/media/
STATIC_URL=/static/

# =============================================================================
# DICOM CONFIGURATION
# =============================================================================

# DICOM Receiver Settings (Production)
DICOM_PORT=11112
DICOM_AET=NOCTIS_SCP
DICOM_BIND=0.0.0.0
DICOM_STORAGE_PATH=/app/dicom_storage

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

# SMTP Email Configuration
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.your-provider.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=your-email@your-domain.com
EMAIL_HOST_PASSWORD=your-email-password
DEFAULT_FROM_EMAIL=noctis@your-domain.com

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# CORS Settings (Restrictive for production)
CORS_ALLOW_ALL_ORIGINS=False
CORS_ALLOWED_ORIGINS=https://your-domain.com,https://www.your-domain.com
CORS_ALLOW_CREDENTIALS=True

# CSRF Settings
CSRF_TRUSTED_ORIGINS=https://your-domain.com,https://www.your-domain.com

# Additional Security Headers
SECURE_HSTS_SECONDS=31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS=True
SECURE_HSTS_PRELOAD=True
SECURE_CONTENT_TYPE_NOSNIFF=True
SECURE_BROWSER_XSS_FILTER=True
X_FRAME_OPTIONS=DENY

# =============================================================================
# LOGGING
# =============================================================================

# Production Logging
LOG_LEVEL=INFO
SENTRY_DSN=  # Optional: Add Sentry DSN for error tracking

# =============================================================================
# MONITORING
# =============================================================================

# Prometheus/Grafana (Optional)
ENABLE_MONITORING=false
GRAFANA_PASSWORD=change-this-grafana-admin-password

# Health Check
HEALTH_CHECK_URL=https://your-domain.com/health/

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================

# Automated Backup Settings
BACKUP_ENABLED=true
BACKUP_RETENTION_DAYS=30
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_S3_BUCKET=  # Optional: S3 bucket for remote backups
BACKUP_S3_REGION=us-east-1

# =============================================================================
# PERFORMANCE SETTINGS
# =============================================================================

# Gunicorn/Daphne Settings
WEB_WORKERS=4
WEB_WORKER_CONNECTIONS=1000
WEB_TIMEOUT=30

# Celery Settings
CELERY_WORKERS=4
CELERY_MAX_TASKS_PER_CHILD=1000

# Database Connection Pool
DB_CONN_MAX_AGE=600

# =============================================================================
# RESOURCE LIMITS
# =============================================================================

# Docker Resource Limits
POSTGRES_MEMORY_LIMIT=1g
REDIS_MEMORY_LIMIT=512m
WEB_MEMORY_LIMIT=2g
CELERY_MEMORY_LIMIT=1g
NGINX_MEMORY_LIMIT=256m

# =============================================================================
# FIREWALL SETTINGS
# =============================================================================

# Allowed Ports (for UFW configuration)
ALLOWED_PORTS=22,80,443,11112

# SSH Configuration
SSH_PORT=22
SSH_KEY_PATH=/root/.ssh/authorized_keys

# =============================================================================
# DEPLOYMENT SETTINGS
# =============================================================================

# Git Repository (for auto-deployment)
GIT_REPO_URL=https://github.com/your-username/noctis-pro.git
GIT_BRANCH=main

# Webhook Secret (for GitHub webhooks)
WEBHOOK_SECRET=your-webhook-secret-key

# =============================================================================
# ENVIRONMENT VALIDATION
# =============================================================================

# Set to 'production' to enable production checks
ENVIRONMENT=production

# =============================================================================
# NOTES FOR PRODUCTION
# =============================================================================

# IMPORTANT: Before deploying to production:
# 
# 1. Change ALL default passwords and secrets
# 2. Configure your domain name and SSL certificates
# 3. Set up proper email configuration
# 4. Configure firewall rules
# 5. Set up monitoring and alerting
# 6. Configure automated backups
# 7. Test disaster recovery procedures
# 8. Review and update security settings
# 9. Set up log rotation and monitoring
# 10. Configure resource limits based on your server specs

# =============================================================================
# QUICK DEPLOYMENT COMMANDS
# =============================================================================

# Initial server setup:
# ./scripts/setup-ubuntu-server.sh

# Deploy production:
# docker compose -f docker-compose.production.yml up -d

# Enable monitoring:
# ENABLE_MONITORING=true docker compose -f docker-compose.production.yml --profile monitoring up -d

# View production logs:
# docker compose -f docker-compose.production.yml logs -f

# Backup system:
# ./scripts/backup-system.sh