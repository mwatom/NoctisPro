# NoctisPro Ngrok Environment Configuration
# Production-ready configuration for Ubuntu Server with static URL

# Ngrok Auth Token (configure with: ngrok config add-authtoken <your-token>)
# Get token from: https://dashboard.ngrok.com/get-started/your-authtoken
# NGROK_AUTHTOKEN=your_auth_token_here

# Static Domain Configuration - PRODUCTION READY
NGROK_USE_STATIC=true  # Enable static URL for production
NGROK_STATIC_URL=colt-charmed-lark.ngrok-free.app  # Your specific static URL

# Alternative static configurations (comment out NGROK_STATIC_URL to use these)
# NGROK_SUBDOMAIN=noctispro  # Static subdomain (requires paid ngrok account)
# NGROK_DOMAIN=noctis.yourdomain.com  # Custom domain (requires paid account + verification)

# Ngrok Configuration
NGROK_REGION=us  # Region: us, eu, ap, au, sa, jp, in
NGROK_TUNNEL_NAME=noctispro-production  # Tunnel name for identification
NGROK_WEB_ADDR=localhost:4040  # Ngrok web interface
NGROK_LOG_LEVEL=info  # Log level: debug, info, warn, error

# Production Server Configuration
DJANGO_PORT=8000  # Django server port
DJANGO_HOST=0.0.0.0  # Listen on all interfaces

# Django Production Settings
ALLOWED_HOSTS="*,colt-charmed-lark.ngrok-free.app,localhost,127.0.0.1"
DEBUG=False  # Disable debug mode for production
USE_TZ=True
SECURE_SSL_REDIRECT=False  # Disabled for ngrok compatibility
SECURE_PROXY_SSL_HEADER=HTTP_X_FORWARDED_PROTO,https  # For ngrok HTTPS handling

# Security Settings (update SECRET_KEY in production)
SECRET_KEY="noctis-pro-production-2024-change-this-in-production"

# Performance Settings
SERVE_MEDIA_FILES=True  # Serve media files directly (for ngrok)
STATIC_ROOT=/workspace/staticfiles
MEDIA_ROOT=/workspace/media

# Logging Configuration
DJANGO_LOG_LEVEL=INFO
LOGGING_ENABLED=True

# Health Check Settings
HEALTH_CHECK_ENABLED=True
HEALTH_CHECK_INTERVAL=30