# Generated by Django 4.2.24 on 2025-09-07 21:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('worklist', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AIAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('findings', models.TextField(blank=True)),
                ('abnormalities_detected', models.JSONField(blank=True, default=list)),
                ('measurements', models.JSONField(blank=True, default=dict)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('human_reviewed', models.BooleanField(default=False)),
                ('review_notes', models.TextField(blank=True)),
                ('accuracy_rating', models.IntegerField(blank=True, null=True)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='AIModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('version', models.CharField(max_length=20)),
                ('model_type', models.CharField(choices=[('classification', 'Classification'), ('detection', 'Object Detection'), ('segmentation', 'Segmentation'), ('reconstruction', 'Reconstruction'), ('report_generation', 'Report Generation'), ('quality_assessment', 'Quality Assessment')], max_length=30)),
                ('modality', models.CharField(max_length=10)),
                ('body_part', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField()),
                ('training_data_info', models.TextField(blank=True)),
                ('accuracy_metrics', models.JSONField(blank=True, default=dict)),
                ('model_file_path', models.CharField(max_length=500)),
                ('config_file_path', models.CharField(blank=True, max_length=500)),
                ('preprocessing_config', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('is_trained', models.BooleanField(default=False)),
                ('last_trained', models.DateTimeField(blank=True, null=True)),
                ('total_analyses', models.IntegerField(default=0)),
                ('avg_processing_time', models.FloatField(default=0)),
                ('success_rate', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AutoReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('modality', models.CharField(max_length=10)),
                ('body_part', models.CharField(max_length=100)),
                ('findings_template', models.TextField()),
                ('impression_template', models.TextField()),
                ('recommendations_template', models.TextField(blank=True)),
                ('confidence_threshold', models.FloatField(default=0.7)),
                ('requires_human_review', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ai_models', models.ManyToManyField(blank=True, to='ai_analysis.aimodel')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AutoGeneratedReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generated_findings', models.TextField()),
                ('generated_impression', models.TextField()),
                ('generated_recommendations', models.TextField(blank=True)),
                ('overall_confidence', models.FloatField()),
                ('requires_review', models.BooleanField(default=True)),
                ('review_status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('modified', 'Modified'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('review_comments', models.TextField(blank=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('ai_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_analysis.aianalysis')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_auto_reports', to=settings.AUTH_USER_MODEL)),
                ('study', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auto_report', to='worklist.study')),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai_analysis.autoreporttemplate')),
            ],
        ),
        migrations.CreateModel(
            name='AITrainingData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_type', models.CharField(choices=[('image', 'Medical Image'), ('report', 'Medical Report'), ('annotation', 'Image Annotation'), ('measurement', 'Measurement Data')], max_length=20)),
                ('ground_truth_labels', models.JSONField(blank=True, default=dict)),
                ('annotations', models.JSONField(blank=True, default=list)),
                ('quality_score', models.FloatField(default=1.0)),
                ('validation_notes', models.TextField(blank=True)),
                ('is_validated', models.BooleanField(default=False)),
                ('used_in_training', models.BooleanField(default=False)),
                ('training_split', models.CharField(blank=True, choices=[('train', 'Training'), ('validation', 'Validation'), ('test', 'Test')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ai_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_data', to='ai_analysis.aimodel')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='worklist.dicomimage')),
                ('study', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='worklist.study')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AIFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('accuracy', 'Accuracy Assessment'), ('false_positive', 'False Positive'), ('false_negative', 'False Negative'), ('suggestion', 'Improvement Suggestion'), ('bug_report', 'Bug Report')], max_length=20)),
                ('rating', models.IntegerField()),
                ('comments', models.TextField()),
                ('incorrect_findings', models.JSONField(blank=True, default=list)),
                ('missed_findings', models.JSONField(blank=True, default=list)),
                ('suggestions', models.TextField(blank=True)),
                ('reviewed', models.BooleanField(default=False)),
                ('action_taken', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ai_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='ai_analysis.aianalysis')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_feedback', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='aianalysis',
            name='ai_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_analysis.aimodel'),
        ),
        migrations.AddField(
            model_name='aianalysis',
            name='reviewer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='aianalysis',
            name='study',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_analyses', to='worklist.study'),
        ),
        migrations.CreateModel(
            name='AIPerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_date', models.DateField()),
                ('sample_size', models.IntegerField()),
                ('accuracy', models.FloatField()),
                ('precision', models.FloatField()),
                ('recall', models.FloatField()),
                ('f1_score', models.FloatField()),
                ('auc_score', models.FloatField(blank=True, null=True)),
                ('metrics_by_category', models.JSONField(blank=True, default=dict)),
                ('previous_accuracy', models.FloatField(blank=True, null=True)),
                ('improvement_percentage', models.FloatField(blank=True, null=True)),
                ('evaluation_notes', models.TextField(blank=True)),
                ('recommended_actions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ai_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='ai_analysis.aimodel')),
                ('evaluated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-evaluation_date'],
                'unique_together': {('ai_model', 'evaluation_date')},
            },
        ),
    ]
